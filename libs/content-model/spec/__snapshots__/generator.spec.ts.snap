// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`watheia.cabbage/type-generator generateModelTypes transforms complex model types 1`] = `
"export interface BackgroundImage {
    __metadata: {
        modelType: 'object';
    };
    type: 'BackgroundImage';
    url?: string;
    backgroundSize: 'auto' | 'cover' | 'contain';
    backgroundPosition: 'bottom' | 'center' | 'left' | 'left-bottom' | 'left-top' | 'right' | 'right-bottom' | 'right-top' | 'top';
    backgroundRepeat: 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';
    opacity?: number;
}
export interface Button {
    __metadata: {
        modelType: 'object';
    };
    type: 'Button';
    label?: string;
    altText?: string;
    url: string;
    showIcon?: boolean;
    icon?: 'apple' | 'arrowLeft' | 'arrowLeftCircle' | 'arrowRight' | 'arrowRightCircle' | 'arrowUpLeft' | 'arrowUpRight' | 'cart' | 'chevronLeft' | 'chevronRight' | 'facebook' | 'github' | 'googlePlay' | 'instagram' | 'linkedin' | 'mail' | 'play' | 'playCircle' | 'reddit' | 'send' | 'twitter' | 'vimeo' | 'youtube';
    iconPosition?: 'left' | 'right';
    style: 'primary' | 'secondary';
    elementId?: string;
}
export interface CheckboxFormControl {
    __metadata: {
        modelType: 'object';
    };
    type: 'CheckboxFormControl';
    name: string;
    label?: string;
    width: 'full' | '1/2';
    isRequired?: boolean;
}
export interface Config {
    __metadata: {
        modelType: 'data';
        id: string;
    };
    type: 'Config';
    fixedLabel?: string;
    favicon?: string;
    header?: Header;
    footer?: Footer;
    titleSuffix?: string;
    defaultSocialImage?: string;
    defaultMetaTags?: (MetaTag)[];
}
export interface ContactBlock {
    __metadata: {
        modelType: 'object';
    };
    type: 'ContactBlock';
    title?: string;
    phoneNumber?: string;
    phoneAltText?: string;
    email?: string;
    emailAltText?: string;
    address?: string;
    addressAltText?: string;
    elementId?: string;
}
export interface ContactSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'ContactSection';
    title?: string;
    text?: string;
    form?: FormBlock;
    media?: ImageBlock | VideoBlock;
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    backgroundSize?: 'full' | 'inset';
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface CtaSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'CtaSection';
    title?: string;
    text?: string;
    actions?: (Button | Link)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    backgroundSize?: 'full' | 'inset';
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface DividerSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'DividerSection';
    title?: string;
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface EmailFormControl {
    __metadata: {
        modelType: 'object';
    };
    type: 'EmailFormControl';
    name?: string;
    label?: string;
    hideLabel?: boolean;
    placeholder?: string;
    width: 'full' | '1/2';
    isRequired?: boolean;
}
export interface FeaturedItem {
    __metadata: {
        modelType: 'object';
    };
    type: 'FeaturedItem';
    title?: string;
    subtitle?: string;
    text?: string;
    featuredImage?: ImageBlock;
    actions?: (Button | Link)[];
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface FeaturedItemsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'FeaturedItemsSection';
    title?: string;
    subtitle?: string;
    items?: (FeaturedItem)[];
    actions?: (Button | Link)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    columns?: number;
    spacingX?: number;
    spacingY?: number;
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface FeaturedPostsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'FeaturedPostsSection';
    title?: string;
    subtitle?: string;
    actions?: (Button | Link)[];
    posts?: (PostLayout)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d';
    elementId?: string;
    showDate?: boolean;
    showAuthor?: boolean;
    showExcerpt?: boolean;
    showFeaturedImage?: boolean;
    showReadMoreLink?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface FeaturedProjectsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'FeaturedProjectsSection';
    title?: string;
    subtitle?: string;
    actions?: (Button | Link)[];
    projects?: (ProjectLayout)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d';
    elementId?: string;
    showDate?: boolean;
    showDescription?: boolean;
    showFeaturedImage?: boolean;
    showReadMoreLink?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface Footer {
    __metadata: {
        modelType: 'object';
    };
    type: 'Footer';
    primaryLinks?: (Button | Link)[];
    contacts?: ContactBlock;
    copyrightText?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface FormBlock {
    __metadata: {
        modelType: 'object';
    };
    type: 'FormBlock';
    title?: string;
    fields?: (TextFormControl | EmailFormControl | TextareaFormControl | CheckboxFormControl | SelectFormControl)[];
    submitLabel?: string;
    elementId: string;
    action?: string;
    destination?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface Header {
    __metadata: {
        modelType: 'object';
    };
    type: 'Header';
    title?: string;
    isTitleVisible?: boolean;
    logo?: ImageBlock;
    primaryLinks?: (Link)[];
    socialLinks?: (Social)[];
    headerVariant: 'variant-a' | 'variant-b' | 'variant-c';
    isSticky?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface HeroSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'HeroSection';
    title?: string;
    subtitle?: string;
    text?: string;
    actions?: (Button | Link)[];
    media?: FormBlock | ImageBlock | VideoBlock;
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    backgroundSize?: 'full' | 'inset';
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface ImageBlock {
    __metadata: {
        modelType: 'object';
    };
    type: 'ImageBlock';
    url?: string;
    altText?: string;
    caption?: string;
    elementId?: string;
}
export interface Label {
    __metadata: {
        modelType: 'object';
    };
    type: 'Label';
    label: string;
    url?: string;
}
export interface LabelsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'LabelsSection';
    title?: string;
    subtitle?: string;
    items?: (Label)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface Link {
    __metadata: {
        modelType: 'object';
    };
    type: 'Link';
    label?: string;
    altText?: string;
    url: string;
    showIcon?: boolean;
    icon?: 'apple' | 'arrowLeft' | 'arrowLeftCircle' | 'arrowRight' | 'arrowRightCircle' | 'arrowUpLeft' | 'arrowUpRight' | 'cart' | 'chevronLeft' | 'chevronRight' | 'facebook' | 'github' | 'googlePlay' | 'instagram' | 'linkedin' | 'mail' | 'play' | 'playCircle' | 'reddit' | 'send' | 'twitter' | 'vimeo' | 'youtube';
    iconPosition?: 'left' | 'right';
    elementId?: string;
}
export interface MediaGallerySection {
    __metadata: {
        modelType: 'object';
    };
    type: 'MediaGallerySection';
    title?: string;
    subtitle?: string;
    images?: (ImageBlock)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    spacing?: number;
    columns?: number;
    aspectRatio?: '1:1' | '3:2' | '2:3' | '4:3' | '3:4' | '16:9' | 'auto';
    showCaption?: boolean;
    enableHover?: boolean;
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface MetaTag {
    __metadata: {
        modelType: 'object';
    };
    type: 'MetaTag';
    property?: 'og:title' | 'og:type' | 'og:image' | 'og:image:alt' | 'og:url' | 'og:description' | 'og:locale' | 'og:site_name' | 'og:video' | 'twitter:card' | 'twitter:site' | 'twitter:creator' | 'twitter:description' | 'twitter:title' | 'twitter:image' | 'twitter:image:alt' | 'twitter:player';
    content?: string;
}
export interface PageLayout {
    __metadata: {
        modelType: 'page';
        id: string;
        urlPath: string;
    };
    type: 'PageLayout';
    title: string;
    sections?: ()[];
    metaTitle?: string;
    metaDescription?: string;
    addTitleSuffix?: boolean;
    socialImage?: string;
    metaTags?: (MetaTag)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e';
    backgroundImage?: BackgroundImage;
}
export interface Person {
    __metadata: {
        modelType: 'data';
        id: string;
    };
    type: 'Person';
    firstName: string;
    lastName?: string;
    role?: string;
    bio?: string;
    image?: ImageBlock;
}
export interface PostFeedLayout {
    __metadata: {
        modelType: 'page';
        id: string;
        urlPath: string;
    };
    type: 'PostFeedLayout';
    title?: string;
    postFeed?: PostFeedSection;
    topSections?: ()[];
    bottomSections?: ()[];
    metaTitle?: string;
    metaDescription?: string;
    addTitleSuffix?: boolean;
    socialImage?: string;
    metaTags?: (MetaTag)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e';
    backgroundImage?: BackgroundImage;
    styles?: Record<string, Record<string, unknown>>;
}
export interface PostFeedSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'PostFeedSection';
    title?: string;
    subtitle?: string;
    actions?: (Button | Link)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d';
    elementId?: string;
    showDate?: boolean;
    showAuthor?: boolean;
    showExcerpt?: boolean;
    showFeaturedImage?: boolean;
    showReadMoreLink?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface PostLayout {
    __metadata: {
        modelType: 'page';
        id: string;
        urlPath: string;
    };
    type: 'PostLayout';
    title: string;
    date: Date;
    author?: Person;
    excerpt?: string;
    featuredImage?: ImageBlock;
    media?: ImageBlock | VideoBlock;
    bottomSections?: ()[];
    metaTitle?: string;
    metaDescription?: string;
    addTitleSuffix?: boolean;
    socialImage?: string;
    metaTags?: (MetaTag)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e';
    backgroundImage?: BackgroundImage;
}
export interface ProjectFeedLayout {
    __metadata: {
        modelType: 'page';
        id: string;
        urlPath: string;
    };
    type: 'ProjectFeedLayout';
    title?: string;
    projectFeed?: ProjectFeedSection;
    topSections?: ()[];
    bottomSections?: ()[];
    metaTitle?: string;
    metaDescription?: string;
    addTitleSuffix?: boolean;
    socialImage?: string;
    metaTags?: (MetaTag)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e';
    backgroundImage?: BackgroundImage;
    styles?: Record<string, Record<string, unknown>>;
}
export interface ProjectFeedSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'ProjectFeedSection';
    title?: string;
    subtitle?: string;
    actions?: (Button | Link)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d';
    elementId?: string;
    showDate?: boolean;
    showDescription?: boolean;
    showFeaturedImage?: boolean;
    showReadMoreLink?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface ProjectLayout {
    __metadata: {
        modelType: 'page';
        id: string;
        urlPath: string;
    };
    type: 'ProjectLayout';
    title: string;
    date: Date;
    client?: string;
    description?: string;
    featuredImage?: ImageBlock;
    media?: ImageBlock | VideoBlock;
    bottomSections?: ()[];
    metaTitle?: string;
    metaDescription?: string;
    addTitleSuffix?: boolean;
    socialImage?: string;
    metaTags?: (MetaTag)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e';
    backgroundImage?: BackgroundImage;
}
export interface QuoteSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'QuoteSection';
    quote: string;
    name?: string;
    title?: string;
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface RecentPostsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'RecentPostsSection';
    title?: string;
    subtitle?: string;
    actions?: (Button | Link)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d';
    elementId?: string;
    recentCount?: number;
    showDate?: boolean;
    showAuthor?: boolean;
    showExcerpt?: boolean;
    showFeaturedImage?: boolean;
    showReadMoreLink?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface RecentProjectsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'RecentProjectsSection';
    title?: string;
    subtitle?: string;
    actions?: (Button | Link)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c' | 'variant-d';
    elementId?: string;
    recentCount?: number;
    showDate?: boolean;
    showDescription?: boolean;
    showFeaturedImage?: boolean;
    showReadMoreLink?: boolean;
    styles?: Record<string, Record<string, unknown>>;
}
export interface SelectFormControl {
    __metadata: {
        modelType: 'object';
    };
    type: 'SelectFormControl';
    name: string;
    label?: string;
    hideLabel?: boolean;
    defaultValue?: string;
    options?: string[];
    width: 'full' | '1/2';
    isRequired?: boolean;
}
export interface Social {
    __metadata: {
        modelType: 'object';
    };
    type: 'Social';
    label?: string;
    altText?: string;
    url: string;
    icon: 'facebook' | 'github' | 'instagram' | 'linkedin' | 'reddit' | 'twitter' | 'vimeo' | 'youtube';
    elementId?: string;
}
export interface Testimonial {
    __metadata: {
        modelType: 'object';
    };
    type: 'Testimonial';
    quote: string;
    name?: string;
    title?: string;
    image?: ImageBlock;
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface TestimonialsSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'TestimonialsSection';
    title?: string;
    subtitle?: string;
    testimonials?: (Testimonial)[];
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b' | 'variant-c';
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface TextareaFormControl {
    __metadata: {
        modelType: 'object';
    };
    type: 'TextareaFormControl';
    name: string;
    label?: string;
    hideLabel?: boolean;
    placeholder?: string;
    width: 'full' | '1/2';
    isRequired?: boolean;
}
export interface TextFormControl {
    __metadata: {
        modelType: 'object';
    };
    type: 'TextFormControl';
    name: string;
    label?: string;
    hideLabel?: boolean;
    placeholder?: string;
    width: 'full' | '1/2';
    isRequired?: boolean;
}
export interface TextSection {
    __metadata: {
        modelType: 'object';
    };
    type: 'TextSection';
    colors?: 'colors-a' | 'colors-b' | 'colors-c' | 'colors-d' | 'colors-e' | 'colors-f';
    variant: 'variant-a' | 'variant-b';
    title?: string;
    subtitle?: string;
    text?: string;
    elementId?: string;
    styles?: Record<string, Record<string, unknown>>;
}
export interface ThemeStyle {
    __metadata: {
        modelType: 'data';
        id: string;
    };
    type: 'ThemeStyle';
    white?: string | number;
    onLight?: string | number;
    black?: string | number;
    onDark?: string | number;
    primary?: string | number;
    onPrimary?: string | number;
    secondary?: string | number;
    onSecondary?: string | number;
    neutral?: string | number;
    onComplementary?: string | number;
    fontBody: 'fontBook' | 'fontDisplay';
    h1?: ThemeStyleHeading;
    h2?: ThemeStyleHeading;
    h3?: ThemeStyleHeading;
    h4?: ThemeStyleHeading;
    h5?: ThemeStyleHeading;
    h6?: ThemeStyleHeading;
    buttonPrimary?: ThemeStyleButton;
    buttonSecondary?: ThemeStyleButton;
    link?: ThemeStyleLink;
}
export interface ThemeStyleButton {
    __metadata: {
        modelType: 'object';
    };
    type: 'ThemeStyleButton';
    weight: 'normal' | 'medium';
    case: 'none' | 'lowercase' | 'capitalize' | 'uppercase';
    letterSpacing: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider';
    horizontalPadding?: number;
    verticalPadding?: number;
}
export interface ThemeStyleHeading {
    __metadata: {
        modelType: 'object';
    };
    type: 'ThemeStyleHeading';
    size: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl';
    weight: 'normal' | 'medium';
    decoration: 'none' | 'underline' | 'line-through';
    case: 'none' | 'lowercase' | 'capitalize' | 'uppercase';
    letterSpacing: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider';
}
export interface ThemeStyleLink {
    __metadata: {
        modelType: 'object';
    };
    type: 'ThemeStyleLink';
    weight: 'normal' | 'medium';
    case: 'none' | 'lowercase' | 'capitalize' | 'uppercase';
    letterSpacing: 'tighter' | 'tight' | 'normal' | 'wide' | 'wider';
}
export interface VideoBlock {
    __metadata: {
        modelType: 'object';
    };
    type: 'VideoBlock';
    title?: string;
    url?: string;
    elementId?: string;
    autoplay?: boolean;
    loop?: boolean;
    muted?: boolean;
    controls?: boolean;
    aspectRatio?: '4:3' | '16:9';
}
"
`;
